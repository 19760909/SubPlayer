{"version":3,"sources":["utils/index.js","utils/assToVtt.js","components/Header.js","components/Subtitle.js","components/Timeline.js","components/Player.js","components/App.js","serviceWorker.js","index.js"],"names":["checkTime","time","test","secondToTime","seconds","moment","duration","format","trim","timeToSecond","asSeconds","urlToArr","url","Promise","resolve","$video","document","createElement","$track","default","kind","appendChild","onload","arr","Array","from","track","cues","map","item","index","$edit","$highlight","id","start","startTime","end","endTime","text","this","toFixed","src","vttToUrl","vttText","URL","createObjectURL","Blob","type","arrToVtt","join","srtToVtt","srtText","concat","replace","readSubtitleFromFile","file","reject","reader","FileReader","name","split","pop","toLowerCase","result","ass","re_ass","RegExp","fixTime","length","line","m","match","filter","assToVtt","onerror","error","readAsText","readSubtitleFromUrl","fetch","then","response","headers","get","catch","success","$el","innerText","classList","add","body","setTimeout","removeChild","notice","message","momentDurationFormatSetup","Wrapper","styled","header","Logo","a","Description","span","Btn","div","File","input","Header","$subtitle","React","createRef","current","files","NProgress","set","data","subtitleUrl","props","updateSubtitleUrl","subtitles","updateSubtitles","done","toastr","canPlayType","updateVideoUrl","className","href","ref","onChange","uploadSubtitle","bind","uploadVideo","onClick","downloadSubtitles","Component","Subtitle","state","lastCurrentIndex","editIndex","editSubtitle","$table","checkSubtitle","setState","updateSubtitle","value","removeSubtitle","mainHeight","mainWidth","headerHeight","width","height","rowHeight","scrollToIndex","rowCount","rowGetter","headerRowRenderer","style","flex","rowRenderer","key","rowData","maxLength","defaultValue","e","target","disabled","onEdit","onUpdate","onRemove","currentIndex","querySelector","scrollTop","offsetTop","Timeline","VideoWrapper","Player","art","videoUrl","option","subtitle","getInstance","on","playing","updateCurrentTime","currentTime","template","player","switchUrl","init","GlobalStyle","createGlobalStyle","Main","App","uddateMainSize","resizeDebounce","func","wait","context","timeout","args","later","apply","clearTimeout","debounce","window","addEventListener","locationUrl","location","decodeURIComponent","searchParams","clientHeight","clientWidth","splice","findIndex","highlightSubtitle","elink","display","download","click","downloadFile","Date","now","functions","Fragment","Boolean","hostname","options","timeOut","hideDuration","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f2a690a.chunk.js","sourcesContent":["import moment from 'moment';\nimport momentDurationFormatSetup from 'moment-duration-format';\nimport assToVtt from './assToVtt';\n\nmomentDurationFormatSetup(moment);\n\nexport function checkTime(time) {\n    return /^(\\d+):([0-5][0-9]):([0-5][0-9])\\.\\d{3}$/.test(time);\n}\n\nexport function checkDuration(duration) {\n    return /^\\d+\\.\\d{3}/.test(duration);\n}\n\nexport function sleep(ms = 0) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function secondToTime(seconds) {\n    const duration = moment.duration(seconds, 'seconds');\n    return duration.format('hh:mm:ss.SSS', {\n        trim: false,\n    });\n}\n\nexport function timeToSecond(time) {\n    return moment.duration(time).asSeconds();\n}\n\nexport function debounce(func, wait, context) {\n    let timeout;\n    return function fn(...args) {\n        const later = function later() {\n            timeout = null;\n            func.apply(context, args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n}\n\nexport function notice(text, success) {\n    const $el = document.createElement('div');\n    $el.innerText = text;\n    $el.classList.add('notice');\n    if (success) {\n        $el.classList.add('success');\n    }\n    document.body.appendChild($el);\n    setTimeout(() => {\n        document.body.removeChild($el);\n    }, 3000);\n}\n\nexport function urlToArr(url) {\n    return new Promise(resolve => {\n        const $video = document.createElement('video');\n        const $track = document.createElement('track');\n        $track.default = true;\n        $track.kind = 'metadata';\n        $video.appendChild($track);\n        $track.onload = () => {\n            const arr = Array.from($track.track.cues).map((item, index) => {\n                return {\n                    $edit: false,\n                    $highlight: false,\n                    id: index,\n                    start: secondToTime(item.startTime),\n                    end: secondToTime(item.endTime),\n                    text: item.text,\n                    get startTime() {\n                        return timeToSecond(this.start);\n                    },\n                    get endTime() {\n                        return timeToSecond(this.end);\n                    },\n                    get duration() {\n                        return (this.endTime - this.startTime).toFixed(3);\n                    },\n                };\n            });\n            resolve(arr);\n        };\n        $track.src = url;\n    });\n}\n\nexport function vttToUrl(vttText) {\n    return URL.createObjectURL(\n        new Blob([vttText], {\n            type: 'text/vtt',\n        }),\n    );\n}\n\nexport function arrToVtt(arr) {\n    return (\n        'WEBVTT\\n\\n' +\n        arr\n            .map((item, index) => {\n                return (\n                    index + 1 + '\\n' + secondToTime(item.start) + ' --> ' + secondToTime(item.end) + '\\n' + item.text\n                );\n            })\n            .join('\\n\\n')\n    );\n}\n\nexport function srtToVtt(srtText) {\n    return 'WEBVTT \\r\\n\\r\\n'.concat(\n        srtText\n            .replace(/\\{\\\\([ibu])\\}/g, '</$1>')\n            .replace(/\\{\\\\([ibu])1\\}/g, '<$1>')\n            .replace(/\\{([ibu])\\}/g, '<$1>')\n            .replace(/\\{\\/([ibu])\\}/g, '</$1>')\n            .replace(/(\\d\\d:\\d\\d:\\d\\d),(\\d\\d\\d)/g, '$1.$2')\n            .concat('\\r\\n\\r\\n'),\n    );\n}\n\nexport function readSubtitleFromFile(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        const type = file.name\n            .split('.')\n            .pop()\n            .toLowerCase();\n        reader.onload = () => {\n            if (type === 'srt') {\n                resolve(srtToVtt(reader.result));\n            } else if (type === 'ass') {\n                resolve(assToVtt(reader.result));\n            } else {\n                resolve(reader.result);\n            }\n        };\n        reader.onerror = error => {\n            reject(error);\n        };\n        reader.readAsText(file);\n    });\n}\n\nexport function readSubtitleFromUrl(url) {\n    let type;\n    return fetch(url)\n        .then(response => {\n            type = response.headers.get('Content-Type');\n            return response.text();\n        })\n        .then(text => {\n            if (/x-subrip/gi.test(type)) {\n                return srtToVtt(text);\n            }\n            return text;\n        })\n        .catch(error => {\n            notice(error.message);\n            throw error;\n        });\n}\n\nexport function downloadFile(url, name) {\n    const elink = document.createElement('a');\n    elink.style.display = 'none';\n    elink.href = url;\n    elink.download = name;\n    document.body.appendChild(elink);\n    elink.click();\n    document.body.removeChild(elink);\n}\n","export default function assToVtt(ass) {\n    const re_ass = new RegExp(\n        'Dialogue:\\\\s\\\\d,' +\n            '(\\\\d+:\\\\d\\\\d:\\\\d\\\\d.\\\\d\\\\d),' +\n            '(\\\\d+:\\\\d\\\\d:\\\\d\\\\d.\\\\d\\\\d),' +\n            '([^,]*),' +\n            '([^,]*),' +\n            '(?:[^,]*,){4}' +\n            '([\\\\s\\\\S]*)$',\n        'i',\n    );\n\n    function fixTime(time = '') {\n        return time\n            .split(/[:.]/)\n            .map((item, index, arr) => {\n                if (index === arr.length - 1) {\n                    if (item.length === 1) {\n                        return '.' + item + '00';\n                    } else if (item.length === 2) {\n                        return '.' + item + '0';\n                    }\n                } else {\n                    if (item.length === 1) {\n                        return (index === 0 ? '0' : ':0') + item;\n                    }\n                }\n\n                return index === 0 ? item : index === arr.length - 1 ? '.' + item : ':' + item;\n            })\n            .join('');\n    }\n\n    return (\n        'WEBVTT\\n\\n' +\n        ass\n            .split(/\\r?\\n/)\n            .map(line => {\n                const m = line.match(re_ass);\n                if (!m) return null;\n                return {\n                    start: fixTime(m[1].trim()),\n                    end: fixTime(m[2].trim()),\n                    text: m[5]\n                        .replace(/{[\\s\\S]*}/g, '')\n                        .replace(/(\\\\N)/g, '\\n')\n                        .trim()\n                        .split(/\\r?\\n/)\n                        .map(item => item.trim())\n                        .join('\\n'),\n                };\n            })\n            .filter(line => line)\n            .map((line, index) => {\n                if (line) {\n                    return index + 1 + '\\n' + line.start + ' --> ' + line.end + '\\n' + line.text;\n                } else {\n                    return '';\n                }\n            })\n            .filter(line => line.trim())\n            .join('\\n\\n')\n    );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport toastr from 'toastr';\nimport NProgress from 'nprogress';\nimport { readSubtitleFromFile, urlToArr, vttToUrl } from '../utils';\n\nconst Wrapper = styled.header`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 50px;\n    border-bottom: 1px solid rgb(36, 41, 45);\n    background-color: rgb(28, 32, 34);\n\n    .left {\n        display: flex;\n        align-items: center;\n        height: 100%;\n        padding-left: 20px;\n    }\n\n    .right {\n        height: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        .links {\n            margin-right: 20px;\n            a {\n                color: #ccc;\n                text-decoration: none;\n                margin-left: 20px;\n\n                &:hover {\n                    color: #fff;\n                }\n            }\n        }\n    }\n`;\n\nconst Logo = styled.a`\n    color: #fff;\n    font-size: 16px;\n    text-decoration: none;\n`;\n\nconst Description = styled.span`\n    font-size: 13px;\n    font-style: italic;\n    padding-left: 20px;\n    opacity: 0.4;\n`;\n\nconst Btn = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n    padding: 0 10px;\n    border-left: 1px solid #000;\n    cursor: pointer;\n    overflow: hidden;\n    color: #ccc;\n    background-color: rgb(39, 41, 54);\n\n    &:hover {\n        color: #fff;\n        background-color: rgb(51, 54, 76);\n    }\n\n    i {\n        margin-right: 5px;\n    }\n`;\n\nconst File = styled.input`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n`;\n\nexport default class Header extends React.Component {\n    $subtitle = React.createRef();\n    $video = React.createRef();\n\n    uploadSubtitle() {\n        if (this.$subtitle.current && this.$subtitle.current.files[0]) {\n            NProgress.start().set(0.5);\n            const file = this.$subtitle.current.files[0];\n            const type = file.name\n                .split('.')\n                .pop()\n                .toLowerCase();\n            if (type === 'vtt' || type === 'srt' || type === 'ass') {\n                readSubtitleFromFile(file, type)\n                    .then(data => {\n                        const subtitleUrl = vttToUrl(data);\n                        this.props.updateSubtitleUrl(subtitleUrl);\n                        urlToArr(subtitleUrl).then(subtitles => {\n                            this.props.updateSubtitles(subtitles);\n                            NProgress.done();\n                        });\n                    })\n                    .catch(error => {\n                        toastr.error(error.message);\n                        NProgress.done();\n                        throw error;\n                    });\n            } else {\n                NProgress.done();\n                toastr.error('Only the following subtitle formats are supported: .vtt, .srt, .ass');\n            }\n        }\n    }\n\n    uploadVideo() {\n        if (this.$video.current && this.$video.current.files[0]) {\n            NProgress.start().set(0.5);\n            const file = this.$video.current.files[0];\n            const $video = document.createElement('video');\n            const canPlayType = $video.canPlayType(file.type);\n            if (canPlayType === 'maybe' || canPlayType === 'probably') {\n                const url = URL.createObjectURL(file);\n                this.props.updateVideoUrl(url);\n            } else {\n                toastr.error(`This video format is not supported: ${file.type}`);\n            }\n            NProgress.done();\n        }\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <div className=\"left\">\n                    <Logo href=\"./\">SubPlayer.js</Logo>\n                    <Description>Online Subtitle Maker</Description>\n                </div>\n                <div className=\"right\">\n                    <div className=\"links\">\n                        <a href=\"https://github.com/zhw2590582/SubPlayer\">Github</a>\n                    </div>\n                    <Btn>\n                        <i className=\"icon-upload\"></i> Upload Subtitle\n                        <File type=\"file\" name=\"file\" ref={this.$subtitle} onChange={this.uploadSubtitle.bind(this)} />\n                    </Btn>\n                    <Btn>\n                        <i className=\"icon-upload\"></i>Upload Video\n                        <File type=\"file\" name=\"file\" ref={this.$video} onChange={this.uploadVideo.bind(this)} />\n                    </Btn>\n                    <Btn onClick={this.props.downloadSubtitles.bind(this)}>\n                        <i className=\"icon-download\"></i>Download Subtitle\n                    </Btn>\n                </div>\n            </Wrapper>\n        );\n    }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport toastr from 'toastr';\nimport { checkTime } from '../utils';\nimport { Table } from 'react-virtualized';\n\nconst Wrapper = styled.div`\n    flex: 1;\n    border-right: 1px solid rgb(36, 41, 45);\n    overflow-y: hidden;\n    overflow-x: hidden;\n    .ReactVirtualized__Table {\n        width: 100%;\n        background: #24292d;\n\n        .ReactVirtualized__Table__Grid {\n            outline: none;\n        }\n\n        .ReactVirtualized__Table__headerRow {\n            background: #1c2022;\n            border-bottom: 1px solid rgb(36, 41, 45);\n\n            .row {\n                padding: 10px;\n                font-style: normal;\n                font-weight: normal;\n                font-size: 14px;\n                text-align: center;\n                text-transform: none;\n            }\n        }\n\n        .ReactVirtualized__Table__row {\n            background: #1c2022;\n            border-bottom: 1px solid rgb(36, 41, 45);\n\n            &:nth-child(odd) {\n                background: #2e3140;\n            }\n\n            &.onhighlight {\n                background-color: #2196f3;\n            }\n\n            .row {\n                padding: 10px;\n                text-align: center;\n            }\n        }\n\n        .input,\n        .textarea {\n            border: none;\n            padding: 5px;\n            min-height: 30px;\n            font-size: 13px;\n            color: #fff;\n            background-color: #3a3a3a;\n        }\n\n        .textarea {\n            resize: vertical;\n        }\n\n        p {\n            line-height: 1.5;\n            margin: 0;\n        }\n    }\n\n    .operation {\n        display: flex;\n        justify-content: center;\n\n        i {\n            width: 30px;\n            cursor: pointer;\n            font-size: 16px;\n        }\n    }\n\n    .edit {\n        display: none;\n        width: 100%;\n        height: 100%;\n    }\n\n    .onedit {\n        .noedit {\n            display: none;\n        }\n\n        .edit {\n            display: block;\n        }\n    }\n`;\n\nexport default class Subtitle extends React.Component {\n    state = {\n        lastCurrentIndex: -1,\n        editIndex: -1,\n        editSubtitle: {},\n        $table: this.$table,\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.currentIndex !== state.lastCurrentIndex) {\n            const $subtitle = document.querySelector('.ReactVirtualized__Grid__innerScrollContainer .onhighlight');\n            if ($subtitle) {\n                document.querySelector('.ReactVirtualized__Table__Grid').scrollTop = $subtitle.offsetTop;\n            }\n        }\n\n        return {\n            lastCurrentIndex: props.currentIndex,\n        };\n    }\n\n    checkSubtitle() {\n        const { editIndex, editSubtitle } = this.state;\n        if (editIndex !== -1) {\n            if (!checkTime(editSubtitle.start)) {\n                toastr.error(`Start time format needs to match like: [00:00:00.000]`);\n                return false;\n            }\n            if (!checkTime(editSubtitle.end)) {\n                toastr.error(`End time format needs to match like: [00:00:00.000]`);\n                return false;\n            }\n        }\n        return true;\n    }\n\n    onEdit(index) {\n        if (this.checkSubtitle()) {\n            this.setState({\n                editIndex: index,\n                editSubtitle: {\n                    ...this.props.subtitles[index],\n                },\n            });\n            this.props.editSubtitle(index);\n        }\n    }\n\n    onUpdate() {\n        if (this.checkSubtitle()) {\n            const { editIndex, editSubtitle } = this.state;\n            this.props.updateSubtitle(editIndex, {\n                ...editSubtitle,\n            });\n            this.setState({\n                editIndex: -1,\n                editSubtitle: {},\n            });\n        }\n    }\n\n    onChange(name, value) {\n        this.setState({\n            editSubtitle: {\n                ...this.state.editSubtitle,\n                [name]: value,\n            },\n        });\n    }\n\n    onRemove(index) {\n        this.props.removeSubtitle(index);\n        this.setState({\n            editIndex: -1,\n            editSubtitle: {},\n        });\n    }\n\n    render() {\n        const { subtitles, mainHeight, mainWidth } = this.props;\n        const { editSubtitle, lastCurrentIndex } = this.state;\n        return (\n            <Wrapper>\n                <Table\n                    headerHeight={40}\n                    width={mainWidth / 2}\n                    height={mainHeight}\n                    rowHeight={60}\n                    scrollToIndex={lastCurrentIndex}\n                    rowCount={subtitles.length}\n                    rowGetter={({ index }) => subtitles[index]}\n                    headerRowRenderer={() => {\n                        return (\n                            <div className=\"ReactVirtualized__Table__headerRow\">\n                                <div className=\"row\" style={{ width: 50 }} width=\"50\">\n                                    #\n                                </div>\n                                <div className=\"row\" style={{ width: 120 }} width=\"120\">\n                                    Start\n                                </div>\n                                <div className=\"row\" style={{ width: 120 }} width=\"120\">\n                                    End\n                                </div>\n                                <div className=\"row\" style={{ width: 100 }} width=\"100\">\n                                    Duration\n                                </div>\n                                <div className=\"row\" style={{ flex: 1 }}>\n                                    Text\n                                </div>\n                                <div className=\"row\" style={{ width: 100 }} width=\"100\">\n                                    Operation\n                                </div>\n                            </div>\n                        );\n                    }}\n                    rowRenderer={props => {\n                        return (\n                            <div\n                                key={props.index}\n                                className={[\n                                    props.className,\n                                    props.rowData.$edit ? 'onedit' : '',\n                                    props.rowData.$highlight ? 'onhighlight' : '',\n                                ]\n                                    .join(' ')\n                                    .trim()}\n                                style={props.style}\n                            >\n                                <div className=\"row\" style={{ width: 50 }}>\n                                    {props.index + 1}\n                                </div>\n                                <div className=\"row\" style={{ width: 120 }}>\n                                    <span className=\"noedit\">{props.rowData.start}</span>\n                                    <input\n                                        maxLength={20}\n                                        className=\"input edit\"\n                                        defaultValue={editSubtitle.start}\n                                        onChange={e => this.onChange('start', e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"row\" style={{ width: 120 }}>\n                                    <span className=\"noedit\">{props.rowData.end}</span>\n                                    <input\n                                        maxLength={20}\n                                        className=\"input edit\"\n                                        defaultValue={editSubtitle.end}\n                                        onChange={e => this.onChange('end', e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"row\" style={{ width: 100 }}>\n                                    <span className=\"noedit\">{props.rowData.duration}</span>\n                                    <input\n                                        disabled\n                                        maxLength={20}\n                                        className=\"input edit\"\n                                        defaultValue={editSubtitle.duration}\n                                        onChange={e => this.onChange('duration', e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"row\" style={{ flex: 1 }}>\n                                    <span className=\"noedit\">\n                                        {props.rowData.text.split(/\\r?\\n/).map((item, index) => (\n                                            <p key={index}>{item}</p>\n                                        ))}\n                                    </span>\n                                    <textarea\n                                        maxLength={500}\n                                        className=\"textarea edit\"\n                                        value={editSubtitle.text}\n                                        onChange={e => this.onChange('text', e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"row operation\" style={{ width: 100 }}>\n                                    <i className=\"icon-pencil noedit\" onClick={() => this.onEdit(props.index)}></i>\n                                    <i className=\"icon-ok edit\" onClick={() => this.onUpdate(props.index)}></i>\n                                    <i className=\"icon-trash-empty\" onClick={() => this.onRemove(props.index)}></i>\n                                </div>\n                            </div>\n                        );\n                    }}\n                ></Table>\n            </Wrapper>\n        );\n    }\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    display: flex;\n    height: 200px;\n    border-top: 1px solid rgb(36, 41, 45);\n    background-color: rgb(28, 32, 34);\n`;\n\nexport default function Timeline() {\n    return <Wrapper>Timeline</Wrapper>;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport ArtplayerComponent from 'artplayer-react';\nimport 'artplayer-react/dist/artplayer-react.css';\n\nconst Wrapper = styled.div`\n    flex: 1;\n`;\n\nconst VideoWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 70%;\n    padding: 20px;\n    border-bottom: 1px solid rgb(36, 41, 45);\n\n    .artplayer-video-player .artplayer-subtitle p {\n        background-color: rgba(0, 0, 0, 0.5);\n    }\n`;\n\nexport default class Player extends React.Component {\n    state = {\n        art: null,\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.art) {\n            const videoUrl = state.art.option.url;\n            const subtitleUrl = state.art.template.$track.src;\n            const currentTime = state.art.currentTime;\n            if (props.videoUrl !== videoUrl) {\n                state.art.player.switchUrl(props.videoUrl);\n            }\n            if (props.subtitleUrl !== subtitleUrl) {\n                state.art.subtitle.init(props.subtitleUrl);\n            }\n            if (!state.art.playing && props.currentTime !== currentTime) {\n                state.art.currentTime = props.currentTime;\n            }\n        }\n        return null;\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <VideoWrapper>\n                    {this.props.videoUrl && this.props.subtitleUrl ? (\n                        <ArtplayerComponent\n                            style={{\n                                width: '100%',\n                                height: '100%',\n                            }}\n                            option={{\n                                url: this.props.videoUrl,\n                                subtitle: {\n                                    url: this.props.subtitleUrl,\n                                },\n                            }}\n                            getInstance={art => {\n                                art.on('video:timeupdate', () => {\n                                    if (art.playing) {\n                                        this.props.updateCurrentTime(art.currentTime);\n                                    }\n                                });\n\n                                this.setState({\n                                    art,\n                                });\n                            }}\n                        />\n                    ) : null}\n                </VideoWrapper>\n            </Wrapper>\n        );\n    }\n}\n","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport toastr from 'toastr';\nimport Header from './Header';\nimport Subtitle from './Subtitle';\nimport Timeline from './Timeline';\nimport Player from './Player';\nimport { debounce, arrToVtt, vttToUrl, readSubtitleFromUrl, urlToArr, timeToSecond, downloadFile } from '../utils';\n\nconst GlobalStyle = createGlobalStyle`\n    html,\n    body,\n    #root {\n        height: 100%;\n    }\n\n    *, *::before, *::after {\n        box-sizing: border-box;\n    }\n\n    #root {\n        display: flex;\n        flex-direction: column;\n        font-size: 14px;\n        color: #ccc;\n        background: rgb(16, 17, 19);\n    }\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n    \n    ::-webkit-scrollbar-thumb {\n        background-color: #666;\n    }\n    \n    ::-webkit-scrollbar-thumb:hover {\n        background-color: #ccc;\n    }\n\n    .notice {\n        position: fixed;\n        z-index: 99;\n        top: 10px;\n        left: 50%;\n        transform: translate(-50%);\n        font-size: 13px;\n        color: #fff;\n        background: #e0271a;\n        padding: 7px 20px;\n        border-radius: 3px;\n\n        &.success {\n            background: rgb(18, 206, 67);\n        }\n    }\n`;\n\nconst Main = styled.div`\n    display: flex;\n`;\n\nlet defaultVideoUrl = 'https://zhw2590582.github.io/assets-cdn/video/one-more-time-one-more-chance-480p.mp4';\nlet defaultSubtitleUrl = 'https://zhw2590582.github.io/assets-cdn/subtitle/one-more-time-one-more-chance.srt';\nexport default class App extends React.Component {\n    state = {\n        mainHeight: 100,\n        mainWidth: 100,\n        videoUrl: '',\n        subtitleUrl: '',\n        currentTime: -1,\n        currentIndex: -1,\n        subtitles: [],\n    };\n\n    componentDidMount() {\n        this.uddateMainSize();\n\n        const resizeDebounce = debounce(() => {\n            this.uddateMainSize();\n        }, 500);\n\n        window.addEventListener('resize', resizeDebounce);\n\n        const locationUrl = new URL(window.location.href);\n        const subtitleUrl = decodeURIComponent(locationUrl.searchParams.get('subtitle') || '') || defaultSubtitleUrl;\n        const videoUrl = decodeURIComponent(locationUrl.searchParams.get('video') || '') || defaultVideoUrl;\n\n        readSubtitleFromUrl(subtitleUrl)\n            .then(data => {\n                const subtitleUrl = vttToUrl(data);\n                this.updateSubtitleUrl(subtitleUrl);\n                this.updateVideoUrl(videoUrl);\n                urlToArr(subtitleUrl).then(subtitles => {\n                    this.updateSubtitles(subtitles);\n                });\n            })\n            .catch(error => {\n                toastr.error(error.message);\n                throw error;\n            });\n    }\n\n    uddateMainSize() {\n        this.setState({\n            mainHeight: document.body.clientHeight - 250,\n            mainWidth: document.body.clientWidth,\n        });\n    }\n\n    removeSubtitle(index) {\n        const subtitles = this.state.subtitles;\n        subtitles.splice(index, 1);\n        this.setState({\n            subtitles,\n        });\n        this.updateSubtitleUrl(vttToUrl(arrToVtt(subtitles)));\n    }\n\n    editSubtitle(index) {\n        const subtitles = this.state.subtitles.map(item => {\n            item.$highlight = false;\n            item.$edit = false;\n            return item;\n        });\n        subtitles[index].$edit = true;\n        this.setState({\n            subtitles,\n            currentTime: subtitles[index].startTime + 0.001,\n        });\n    }\n\n    highlightSubtitle(index) {\n        const subtitles = this.state.subtitles.map(item => {\n            item.$highlight = false;\n            return item;\n        });\n        subtitles[index].$highlight = true;\n        this.setState({\n            subtitles,\n        });\n    }\n\n    updateSubtitle(index, subtitle) {\n        const subtitles = this.state.subtitles.map(item => {\n            item.$edit = false;\n            return item;\n        });\n        subtitles[index] = {\n            ...subtitle,\n            get startTime() {\n                return timeToSecond(this.start);\n            },\n            get endTime() {\n                return timeToSecond(this.end);\n            },\n            get duration() {\n                return (this.endTime - this.startTime).toFixed(3);\n            },\n        };\n        this.setState({\n            subtitles,\n        });\n        this.updateSubtitleUrl(vttToUrl(arrToVtt(subtitles)));\n    }\n\n    updateVideoUrl(videoUrl) {\n        this.setState(\n            {\n                videoUrl,\n            },\n            () => {\n                toastr.success('Update video successfully');\n            },\n        );\n    }\n\n    updateSubtitleUrl(subtitleUrl) {\n        this.setState(\n            {\n                subtitleUrl,\n            },\n            () => {\n                toastr.success('Update subtitles successfully');\n            },\n        );\n    }\n\n    updateSubtitles(subtitles) {\n        this.setState({\n            subtitles,\n        });\n    }\n\n    updateCurrentTime(currentTime) {\n        const currentIndex = this.state.subtitles.length\n            ? this.state.subtitles.findIndex(item => {\n                  return item.startTime <= currentTime && item.endTime >= currentTime;\n              })\n            : -1;\n        if (currentIndex !== -1) {\n            this.highlightSubtitle(currentIndex);\n        }\n        this.setState({\n            currentIndex,\n        });\n    }\n\n    downloadSubtitles() {\n        downloadFile(vttToUrl(arrToVtt(this.state.subtitles)), `${Date.now()}.vtt`);\n    }\n\n    render() {\n        const functions = {\n            ...this.state,\n            removeSubtitle: this.removeSubtitle.bind(this),\n            editSubtitle: this.editSubtitle.bind(this),\n            highlightSubtitle: this.highlightSubtitle.bind(this),\n            updateSubtitle: this.updateSubtitle.bind(this),\n            updateSubtitles: this.updateSubtitles.bind(this),\n            updateVideoUrl: this.updateVideoUrl.bind(this),\n            updateSubtitleUrl: this.updateSubtitleUrl.bind(this),\n            updateCurrentTime: this.updateCurrentTime.bind(this),\n            downloadSubtitles: this.downloadSubtitles.bind(this),\n        };\n\n        return (\n            <React.Fragment>\n                <GlobalStyle />\n                <Header {...functions} />\n                <Main\n                    style={{\n                        height: `${this.state.mainHeight}px`,\n                    }}\n                >\n                    <Subtitle {...functions} />\n                    <Player {...functions} />\n                </Main>\n                <Timeline {...functions} />\n            </React.Fragment>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'normalize.css';\nimport './fontello/css/fontello.css';\nimport 'toastr/build/toastr.css';\nimport toastr from 'toastr';\nimport 'nprogress/nprogress.css';\nimport 'react-virtualized/styles.css';\nimport * as serviceWorker from './serviceWorker';\n\ntoastr.options.timeOut = 3000;\ntoastr.options.hideDuration = 300;\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}